buildscript {
    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
        maven { url 'http://dl.bintray.com/jetbrains/intellij-plugin-service' }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlin_version}"
    }
}

plugins {
    id "org.jetbrains.intellij" version "0.2.17"
    id "io.gitlab.arturbosch.detekt" version "1.0.0.RC5-4"
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'jacoco'

apply from: rootProject.file('config/jacoco.gradle')

sourceCompatibility = javaVersion
targetCompatibility = javaVersion
compileKotlin.kotlinOptions.jvmTarget = javaVersion
compileTestKotlin.kotlinOptions.jvmTarget = javaVersion

tasks.withType(JavaCompile) { options.encoding = 'UTF-8' }

// take the version number defined in 'gradle.properties' and use that in plugin.xml
version = "${version}"
task initConfig(type: Copy) {
    from('src/main/resources') {
        include '**/plugin.xml'
        filter(org.apache.tools.ant.filters.ReplaceTokens, tokens: [version: version])
    }
}

apply plugin: 'org.jetbrains.intellij'
intellij {
    pluginName 'aemtools'
    version ideaVersion
    updateSinceUntilBuild = false

    // SET YOUR JETBRAINS LOGIN DETAILS AS ENVIRONMENT VARIABLES SO THAT YOU CAN PUBLISH A NEW BUILD TO THE REPOSITORY
    publishPlugin {
        username System.getenv('JETBRAINS_USERNAME')
        password System.getenv('JETBRAINS_PASSWORD')
    }
}

sourceSets {
    main.java.srcDirs += "src/main/gen"
    main.kotlin.srcDirs += "src/main/kotlin"
    main.resources.srcDir "src/main/resources"

    test.kotlin.srcDir 'src/test/kotlin'
    test.resources.srcDirs += "src/main/resources"
}

test {
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat = 'full'
    }
}

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
}

allprojects {
    group = "com.aemtools"
    version = aemtools_version

    repositories {
        mavenCentral()
        mavenLocal()
        maven { url 'http://dl.bintray.com/jetbrains/spek' }
        maven { url "https://jitpack.io" }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'kotlin'
    apply plugin: 'jacoco'
    apply plugin: 'org.junit.platform.gradle.plugin'

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-runtime:$kotlin_version"

    compile "com.google.code.gson:gson:$gson_version"

    compile "org.apache.commons:commons-lang3:$apache_commons_version"

    compile project('lang')
    compile project('common')
    compile project('inspection')

    testImplementation project('test-framework')

    testImplementation group: 'com.github.markusbernhardt', name: 'proxy-vole', version: '1.0.3'

    testImplementation "junit:junit:$junit_version"
    testImplementation "org.jmockit:jmockit:$jmockit_version"
    testImplementation "org.assertj:assertj-core:$assertj_version"
    testImplementation "org.mockito:mockito-core:$mockito_version"
}

    junitPlatform {
        filters {
            engines {
                include 'spek', 'junit-jupiter', 'junit-vintage'
            }
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.3.1'
}
